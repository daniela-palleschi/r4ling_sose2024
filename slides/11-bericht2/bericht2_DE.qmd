---
title: "Bericht 2 - ANSWER SHEET"
subtitle: "Konsolidierung der neuen Kenntnisse"
author: "Daniela Palleschi"
institute: Humboldt-Universität zu Berlin
footer: "Woche 11 - Bericht 2"
lang: de
date: "01/17/2024"
format:
  html:
    output-file: bericht2_DE_blatt.html
    number-sections: true
    number-depth: 3
    toc: true
    code-overflow: wrap
    # code-tools: true
    self-contained: true
  pdf:
    output-file: bericht1_DE.pdf
    toc: true
    papersize: a4paper
    number-sections: true
    colorlinks: true
    code-overflow: wrap
bibliography: ../../references.bib
editor_options: 
  chunk_output_type: console
---

```{r, eval=TRUE, echo = FALSE}
# set this to TRUE if you want to provide the results/answers; then also add 'code-tools: true' to the YAML
# set this to FALSE if this is the version to be sent describing the assignment

options(scipen=999)

# ANSWERS_MODE <- "instructions" # instructions only
# ANSWERS_MODE <- "output" # output only but not the code
ANSWERS_MODE <- "answers" # code and output
```

```{r, eval = if (ANSWERS_MODE == 'instructions') TRUE else FALSE, echo = FALSE}

knitr::opts_chunk$set(eval = F, # evaluate chunks
                      echo = F, # 'print code chunk?'
                      message = F, # 'print messages (e.g., warnings)?'
                      error = F, # stop when error encountered
                      warning = F) # don't print warnings
```

```{r, eval = if (ANSWERS_MODE == 'output') TRUE else FALSE, echo = FALSE}
knitr::opts_chunk$set(eval = T, # evaluate chunks
                      echo = F, # 'print code chunk?'
                      message = F, # 'print messages (e.g., warnings)?'
                      error = F, # stop when error encountered
                      warning = F) # don't print warnings
```

```{r, eval = if (ANSWERS_MODE == 'answers') TRUE else FALSE, echo= if (ANSWERS_MODE == 'answers') TRUE else FALSE}
knitr::opts_chunk$set(eval = T, # evaluate chunks
                      echo = T, # 'print code chunk?'
                      message = F, # 'print messages (e.g., warnings)?'
                      error = F, # stop when error encountered
                      warning = F) # don't print warnings
```

```{r, eval = T, cache = F}
#| echo: false
#| results: hide
# Create references.json file based on the citations in this script
# make sure you have 'bibliography: references.json' in the YAML
# rbbt::bbt_update_bib("inclass.qmd")
```

Der Zweck dieses Berichts ist es, das, was wir in den letzten Wochen gelernt haben, mit dem zu konsolidieren, was wir zuvor gelernt haben. Sie werden einen Datensatz aus einem veröffentlichten Eye-Tracking-Lesebericht [@biondo_yesterday_2022] laden, der auf Moodle verfügbar ist. Falls Sie diesen Kurs nicht auf Moodle verfolgen, ist der Datensatz auch auf dem Open Science Framework unter [https://osf.io/x8vc7](https://osf.io/x8vc7) frei zugänglich.

Sie können Ihr eigenes Quarto-Skript von Grund auf erstellen oder ein leeres Skript verwenden, das ich mit den Fragen und den entsprechenden Überschriften erstellt habe. Sie können dieses Skript auf Moodle oder online [hier](https://github.com/daniela-palleschi/r4ling/blob/689c46b15a883d0fb2d001ea50d97fa101e23d62/slides/11-bericht2/empty%20script/student_bericht2.qmd) finden.

### Beschreibung des Datensatzes {.unnumbered}

Diese Beschreibung soll einen gewissen Kontext zu dem Datensatz liefern. Der Zweck dieses Berichts ist es jedoch, Ihre Fähigkeit zu demonstrieren, die Daten zu laden, zu verarbeiten, zusammenzufassen und darzustellen. Auch wenn Ihnen die Konzepte, die für den Datensatz relevant sind, nicht klar sind, werden Sie in der Lage sein, die Aufgaben zu lösen.

Der Datensatz enthält Eye-Tracking-Lesezeiten über Satzregionen hinweg für spanische Sätze mit einem zukunfts- oder vergangenheitsbezogenen temporalen Adverb (z.B., *gestern* oder *morgen* auf Deutsch) am Satzanfang und einem Verb in der Vergangenheits- oder Zukunftsform am Ende des Satzes. Eine entscheidende Manipulation war, ob die Zeitform des Verbs mit dem vorangehenden temporalen Adverb übereinstimmte oder nicht. @tbl-stimuli enthält einige Beispielstimuli. 


```{r}
#| eval: true
#| label: tbl-stimuli
#| tbl-cap: Example stimuli
dplyr::tribble(
  ~"Satz", ~"Adverb", ~"Verb", ~"Grammatikalität",
  "A la salida del trabajo, **ayer** las chicas **compraron** pan en la tienda.<br> *Nach der Arbeit* **gestern** **kauften** *die Mädchen* *Brot im Laden*","past", "past", "gramm",
  "A la salida del trabajo, **ayer** las chicas **\\*comprarán** pan en la tienda.<br> *Nach der Arbeit* **gestern** **\\*werden** *die Mädchen* *im Laden* *Brot* **kaufen**","past", "future", "ungramm",
  "A la salida del trabajo, **mañana** las chicas **comprarán** pan en la tienda.<br> *Nach der Arbeit* **morgen** *die Mädchen* **kauften** *Brot im Laden*","future", "future", "gramm",
  "A la salida del trabajo, **mañana** las chicas **\\*compraron** pan en la tienda.<br> *nach der Arbeit* **morgen** *die Mädchen* **\\*kauften** *Brot im Laden*","future", "past", "ungramm",
) |> 
  knitr::kable(format="markdown") |> 
  kableExtra::kable_styling(full_width = T)
```

Für die Zwecke dieses Berichts sind folgende Variablen von Interesse:

  + `verb_t`: Verbform (`Past`/Vergangenheit oder `Future`/Zukunft)
  + `gramm`: Grammatikalität (`gramm` oder `ungramm`)
  + `roi`: Region von Interesse (`2` = Adverb, `4` = Verb)
  + die Maßnahmen 
    + `fp`: First-Pass-Lesezeit in Millisekonden (die Dauer des Blicks auf die Region beim ersten Sehen) und
    + `tt`: Gesamtlesezeit in Millisekonden, (*total reading time* auf Englisch; die Gesamtdauer des Blicks auf die Region während der gesamten Satzpräsentation)

Längere Eye-Tracking-Lesezeiten sind in der Regel mit Schwierigkeiten beim Sprachverständnis verbunden. Es hat sich beispielsweise gezeigt, dass syntaktisch komplexe Sätze (im Gegensatz zu einfachen Sätzen) oder Wörter, die im vorangegangenen Kontext ungrammatisch sind (im Gegensatz zu grammatikalischen Wörtern), längere Lesezeiten hervorrufen. Aus diesem Grund würden wir erwarten, dass die Lesezeiten unter ungrammatischen Bedingungen länger sind als unter grammatikalischen Bedingungen. Eine weitere Forschungsfrage von @biondo_yesterday_2022 war, ob es Unterschiede in der Verarbeitung (d. h. in den Lesezeiten) zwischen den Zeitformen Vergangenheit und Zukunft gibt.

Durch die Untersuchung dieses Datensatzes sind wir an folgenden Fragen interessiert:

+ Unterscheiden sich die Eye-Tracking-Lesemessungen (First-Pass-Lesezeit, Gesamtlesezeit) in den Adverb- und Verbregionen zwischen 
  + grammatischen und ungrammatischen Sätzen?
  + Vergangenheits- und Zukunftsformen?

Sie werden Diagramme und zusammenfassende Statistiken erstellen, um diese Fragen zu beantworten.

# Einrichten

Führen Sie den folgenden Code aus, um Ihre Umgebung für die folgenden Aufgaben einzurichten.

## Packages {.unnumbered}

Führen Sie den folgenden Code aus, um die erforderlichen Pakete zu laden: `tidyverse`, `here`, `janitor`, und `patchwork`.

```{r}
#| echo: true
#| eval: true
pacman::p_load(
  tidyverse,
  here,
  janitor,
  patchwork
)
```

## Daten laden {.unnumbered}

Nachfolgend finden Sie einen Code, der einen Datensatz von @biondo_yesterday_2022 lädt, eine Studie zur Beobachtung von Augenbewegungen beim Lesen. Dieser Datensatz muss zuerst heruntergeladen und in Ihrem `Daten`-Ordner gespeichert werden. 

```{r}
#| echo: true
df_biondo <-
  read_csv(here("daten", "Biondo.Soilemezidi.Mancini_dataset_ET.csv"),
           locale = locale(encoding = "Latin1")) |> 
  clean_names() |> 
  mutate(gramm = ifelse(gramm == 0, "ungramm", "gramm")) |> 
  filter(adv_type == "Deic",
         roi %in% c(2,4))
```

## Datenumwandlung 1: Transformation {.unnumbered}

Fügen Sie unter Verwendung von Pipes (`|>`) dem obigen Code-Stück eine Zeile hinzu:

  + eine Zeile, in der Sie die Variable `verb_t` in `tense` umbenennen
  + eine Zeile, in der Sie nur die Variablen `roi`, `label`, `tense`, `gramm`, `fp`, und `tt` auswählen

Sie sollten dann einen Datenrahmen mit 7680 Beobachtungen und 6 Variablen haben.

```{r}
#| eval: true
df_biondo <-
  read_csv(here("daten", "Biondo.Soilemezidi.Mancini_dataset_ET.csv"),
           locale = locale(encoding = "Latin1")) |> 
  clean_names() |> 
  mutate(gramm = ifelse(gramm == 0, "ungramm", "gramm")) |> 
  filter(adv_type == "Deic",
         roi %in% c(2,4)) |> 
  rename(
    tense = verb_t
  ) |> 
  select(roi, label, tense, gramm, fp, tt)
```

# Plotinterpretation: Verteilung

Betrachten Sie @fig-distribution A und B und beschreiben Sie die Diagramme. Beide enthalten nur Daten aus der Verbregion eines Satzes (`roi == 4`). Geben Sie den ungefähren Modus sowie die Minimal- und Maximalwerte für den gesamten Datensatz (@fig-distribution A) und den Median, den Minimal- und den Maximalwert pro Bedingung (@fig-distribution B) an.

```{r}
#| eval: true
fig_distribution <-
  df_biondo |> 
  filter(roi == 4) |> 
  ggplot() +
  aes(x = tt) +
  geom_histogram() +
  theme_bw() +
  
df_biondo |> 
  filter(roi == 4) |> 
  ggplot() +
  aes(x = tense, y = tt,
      colour = gramm) |> 
  geom_boxplot() +
  theme_bw() 

ggsave(here("figures", "bericht3", "fig_distribution.png"), fig_distribution,
       width = 20,
       height = 10,
       units = "cm",
       scale = .85)

# now in Terminal: push figure to github repo
```

```{r}
#| eval: true
#| label: fig-distribution
#| fig-cap: Zu interpretierende Plots
#| fig-asp: .5
fig_distribution + plot_annotation(tag_levels = "A")

```


# Data wrangling 2: Aufräumen

Verwenden Sie die Funktion `pivot_longer()`, um den Datensatz zu verlängern, wobei die Spalten (`cols =`) `fp` und `tt` zu einer Spalte (`names_to = `) namens `measure` werden und ihre Werte in einer Spalte (`values_to = `) namens `time` gespeichert werden. Speichern Sie das Ergebnis als `df_longer`. Es sollte 15360 Beobachtungen und 6 Spalten enthalten.

```{r}
#| echo: true
#| eval: false
df_longer <-
```

```{r}
df_longer <-
  df_biondo |> 
  pivot_longer(
    cols = c(fp, tt),
    names_to = "measure",
    values_to = "time"
  )
```

# Zusammenfassende Statistik

Verwenden Sie die Funktion `summarise()`, um den Mittelwert und die Standardabweichung von `time` zu ermitteln. Gruppieren Sie die Ergebnisse nach `measure`, `tense`, `gramm` und `roi` (entweder mit `.by =` oder `group_by()`).

```{r}
#| echo: true
#| eval: false
sum_et <-
```

```{r}
sum_et <-
  df_longer |> 
  drop_na() |> 
  summarise(
    mean = mean(time),
    sd = sd(time),
    .by = c(measure, tense, gramm, roi)
  )
```

Drucken Sie die Zusammenfassung.

```{r}
sum_et
```

# Visualisierung zusammenfassender Statistiken

In dieser Aufgabe erstellen Sie zwei Fehlerdiagramme und drucken sie nebeneinander aus.

## Adverb-Region {.unnumbered}

Erzeugen Sie ein Fehlerdiagramm namens `fig_adverb` für die Region `adverb` (`roi == 2`) der soeben erstellten Zusammenfassung mit folgender Ästhetik:
  + Grammatikalität auf der x-Achse
  + Mittelwert auf der y-Achse
  + Zeitform als Farbe und Form
  + Fehlerbalken mit +/- 1 Standardabweichung
  + Facetten für die Messung
  + ein geeigneter Titel für die Darstellung und Beschriftungen der x- und y-Achse
  
```{r}
#| echo: true
#| eval: false
fig_adverb <-
```

## Verb-Region {.unnumbered}

Erzeugen Sie die gleiche Darstellung für die Region `verb` (`roi == 4`) mit dem Namen `fig_verb`.

**Tipp:** Sie können einfach den Code aus der Darstellung der Adverbregion kopieren und die Region (`roi`) in das Verb ändern!

```{r}
#| echo: true
#| eval: false
fig_verb <-
```


```{r}
sum_et |> 
  filter(roi == 4) |> 
  ggplot() +
  aes(x = gramm, y = mean,
      colour = tense, shape = tense,
      group = tense) +
  geom_point(
                position = position_dodge(.2)) +
  geom_errorbar(aes(ymin = mean-sd, ymax = mean+sd),
                width = .2,
                position = position_dodge(.2)) +
  facet_grid(~measure) +
  geom_line(
                position = position_dodge(.2))
```


  
## Plots drucken {.unnumbered}

Stellen Sie Ihre beiden Fehlerbalken nebeneinander dar, indem Sie das Paket `patchwork` verwenden


# Plot-Interpretation: zusammenfassende Statistiken

Beschreiben Sie etwaige Unterschiede zwischen den Bedingungen und Regionen auf der Grundlage der von Ihnen erstellten Zusammenfassung und der aus der Zusammenfassung generierten Diagramme.

# Literaturverzeichnis {.unnumbered .unlisted}


